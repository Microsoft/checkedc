#ifndef __VOICE_SVC_CHECKEDC_H_
#define __VOICE_SVC_CHECKEDC_H_

#define MAX_APR_SERVICE_NAME_LEN 64
#define MSG_REQUEST 2
#define BUF_LEN 270

typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;
typedef char s8;
typedef short s16;
typedef int s32;
typedef long long s64;


struct file {
    void *private_data;
};

struct voice_svc_write_msg {
    u8 msg_type;
    /* CHECKEDC MODIFICATION */
    //u8 payload[0];
    u8 payload checked [0];
};

struct voice_svc_cmd_request{
    /* CHECKEDC MODIFICATION */
    u8 svc_name checked[MAX_APR_SERVICE_NAME_LEN];
    u8 src_port;
    u8 dest_port;
    u8 token;
    u8 opcode;
    u8 payload_size;
    /* CHECKEDC MODIFICATION */
    //u8 payload[0];
    //array_ptr<u8> payload : count(payload_size+1);
    u8 payload checked [0] : count(payload_size);
};


struct apr_hdr {
    u8 hdr_field;
    u8 pkt_size;
    u8 src_svc;
    u8 src_domain;
    u8 src_port;
    u8 dest_svc;
    u8 dest_domain;
    u8 dest_port;
    u8 token;
    u8 opcode;
};

struct apr_data {
    struct apr_hdr hdr;
    /* CHECKEDC MODIFICATION */
    //u8 payload[0];
    u8 payload checked [0];
} __packed;

struct voice_svc_prvt {
    /* void *apr_q6_mvm; */
    /* void *apr_q6_cvs; */
    u8 response_count;
    /* MODIFIED FOR CONVINENCE */
    /* struct list_head response_queue; */
    /* wait_queue_head_t response_wait; */
    /* spinlock_t response_lock; */
};


#endif
